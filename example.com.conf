map $http_upgrade $connection_upgrade {
  default upgrade;
  ''      close;
}

# http server
server {
  listen 80;
  server_name example.com;
  return 301 https://$host$request_uri;
}

# ssl configuration

server {
  listen 443 http2;

  ssl_certificate /etc/letsencrypt/live/example.com/fullchain.pem;
  ssl_certificate_key /etc/letsencrypt/live/example.com/privkey.pem;

  # (2) Uncomment only for advanced authentification
  # ssl_client_certificate          /etc/nginx/Client-CA.pem; # trusted CA used to issuing client certs
  # ssl_verify_client                on;

  # Improve HTTPS performance with session resumption
  ssl_session_cache shared:SSL:10m;
  ssl_session_timeout 5m;

  # Server tokens
  server_tokens off;

  # Enable server-side protection against BEAST attacks
  ssl_prefer_server_ciphers on;
  ssl_ciphers 'ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-CCM:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-CCM';

  # Disable TLSv1 and 1.1 (date of writing: 04.07.2020)
  ssl_protocols TLSv1.3 TLSv1.2;

  # Diffie-Hellman parameter for DHE ciphersuites
  ssl_dhparam /etc/ssl/certs/dhparam.pem;

  # EDH CURVE
  ssl_ecdh_curve X25519:prime256v1:secp521r1:secp384r1;

  # Enable HSTS (https://developer.mozilla.org/en-US/docs/Security/HTTP_Strict_Transport_Security)
  add_header Strict-Transport-Security "max-age=63072000; includeSubdomains";

  # Enable OCSP stapling (http://blog.mozilla.org/security/2013/07/29/ocsp-stapling-in-firefox)
  ssl_stapling on;
  ssl_stapling_verify on;
  ssl_trusted_certificate /etc/letsencrypt/live/example.com/fullchain.pem;
  resolver 8.8.8.8 8.8.4.4 valid=300s;
  resolver_timeout 5s;

  location / {
     proxy_pass https://127.0.0.1:8080; # replace this with desired port
     # proxy_pass http://127.0.0.1:8080; # use this if you redirect to a http application
     proxy_set_header Host $host;
     proxy_set_header X-Real-IP  $remote_addr;
     proxy_set_header X-Forwarded-For  $proxy_add_x_forwarded_for;
     proxy_set_header X-Forwarded-Proto  $scheme;
     satisfy                                 any;
     proxy_redirect http:// https://;
     proxy_http_version 1.1;
     proxy_set_header Upgrade $http_upgrade;
     proxy_set_header Connection $connection_upgrade;

     # Authentification stuff

     # BASIC
     # For Basic Authentification uncomment the two lines below
     # auth_basic "Username and Password Required"; # prompt that users will see
     # To generate a password and a user, use apache-utils and specify the path /etc/nginx/.htpasswd
     # auth_basic_user_file /etc/nginx/.htpasswd;

     # ADVANCED
     # For advanced Authentification you will need client certificates and a certificate
     # authority. Tutorial: https://www.debiantutorials.com/create-your-private-certificate-authority-ca/
     # If you have your certificate authority, uncomment the 3 lines below, marked with (1) and
     # the section on top thats marked with (2) (client certificate) NOTE: replace the path with
     # the path to your Client-CA.pem !!

     # (1)
     # allow                                   192.168.0.1/24;
     # allow                                   127.0.0.1;
     # deny                                    all;

  }

}
